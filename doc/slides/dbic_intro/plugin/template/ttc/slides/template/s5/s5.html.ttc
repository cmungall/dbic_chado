use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.20
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249404507',
        'name' => 's5.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "<!-- BEGIN s5 -->\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \n	\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=";
    #line 6 "slides/template/s5/s5.html"
    $output .=  $stash->get('character_encoding');
    $output .=  "\">\n<title>";
    #line 7 "slides/template/s5/s5.html"
    $output .=  $stash->get('presentation_topic');
    $output .=  "</title>\n<meta name=\"generator\" content=\"Spork-S5\" />\n<meta name=\"version\" content=\"Spork-S5 0.04\" />\n<meta name=\"author\" content=\"";
    #line 10 "slides/template/s5/s5.html"
    $output .=  $stash->get('author_name');
    $output .=  "\" />\n<link rel=\"stylesheet\" href=\"ui/slides.css\" type=\"text/css\" media=\"projection\" id=\"slideProj\" />\n<link rel=\"stylesheet\" href=\"ui/opera.css\" type=\"text/css\" media=\"projection\" id=\"operaFix\" />\n<link rel=\"stylesheet\" href=\"ui/print.css\" type=\"text/css\" media=\"print\" id=\"slidePrint\" />\n";
    #line 16 "slides/template/s5/s5.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['hub', 0, 'css', 0, 'files', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'css_file'} = $_tt_value;
    $output .=  "  <link rel=\"stylesheet\" type=\"text/css\" href=\"";
    #line 15 "slides/template/s5/s5.html"
    $output .=  $stash->get('css_file');
    $output .=  "\" />\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "<script src=\"ui/slides.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n\n<div class=\"layout\">\n  <div id=\"currentSlide\"></div>\n  <div id=\"header\"></div>\n  <div id=\"footer\">\n    <h2>";
    #line 25 "slides/template/s5/s5.html"
    $output .=  $stash->get('author_name');
    $output .=  "</h2>\n    <h2>";
    #line 26 "slides/template/s5/s5.html"
    $output .=  $stash->get('author_email');
    $output .=  "</h2>\n    <div id=\"controls\"></div>\n  </div>\n</div>\n\n<div class=\"slide\">\n    <h1>";
    #line 32 "slides/template/s5/s5.html"
    $output .=  $stash->get('presentation_title');
    $output .=  "</h1>\n    <h2>";
    #line 33 "slides/template/s5/s5.html"
    $output .=  $stash->get('presentation_place');
    $output .=  "</h2>\n    <h3>";
    #line 34 "slides/template/s5/s5.html"
    $output .=  $stash->get('presentation_date');
    $output .=  "</h3>\n</div>\n\n";
    #line 39 "slides/template/s5/s5.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('slides');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'s'} = $_tt_value;
    $output .=  "\n";
    #line 38 "slides/template/s5/s5.html"
    $output .=  $stash->get('s');
    $output .=  "\n";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</body>\n</html>\n<!-- END s5 -->\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
